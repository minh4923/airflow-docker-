# Thêm một anchor cho build để tái sử dụng
x-airflow-build: &airflow-build
  build: .

x-airflow-common: &airflow-common
  <<: *airflow-build # Kế thừa build từ đây
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__FERNET_KEY: "" # BẠN NÊN TẠO MỘT KEY Ở ĐÂY
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKENDS: "airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
  user: "${AIRFLOW_UID:-50000}:0"
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - 8081:8080
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"'
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      airflow-init:
        condition: service_completed_successfully

  
  airflow-init:
    <<: *airflow-common
    command:
      - bash
      - -c
      - |
        # Chờ một chút để đảm bảo mọi thứ sẵn sàng (tùy chọn nhưng an toàn)
        sleep 5
        # Lệnh chown không còn cần thiết, entrypoint mặc định sẽ xử lý quyền
        # Khởi tạo và nâng cấp cơ sở dữ liệu
        airflow db upgrade && \
        # Tạo user admin, chỉ thực hiện khi db upgrade thành công
        airflow users create \
            --username admin \
            --firstname Admin \
            --lastname User \
            --role Admin \
            --email admin@example.com \
            --password admin
    user: "0:0" 
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-db-volume: